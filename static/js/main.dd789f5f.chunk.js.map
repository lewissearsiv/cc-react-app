{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","description_input","price_input","count","data_array","input_date","input_time","key","value","this","setState","timestamp","Date","now","instance_date","Intl","DateTimeFormat","year","month","day","format","instance_time","hour","minute","updated_count","new_data_point","id","description_val","price_val","parseFloat","new_data_array","push","updated_array","filter","item","className","type","placeholder","onChange","e","update_attribute","target","onClick","update_dataframe","size","width","color","class","role","length","reduce","a","v","toLocaleString","style","currency","map","delete_row","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd789f5f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport './container_css.scss';\n\n\nclass App extends Component {\n  \n  //\"init\"\n  constructor(props){\n    super(props);\n    this.state = {\n      description_input: \"\",\n      price_input: \"\",\n      count: 0,\n      data_array: [],\n      input_date: \"\",\n      input_time: \"\"\n    }\n  }\n\n  //JS Functions\n  update_attribute(key, value){\n    //Update the state\n    this.setState({\n      [key]: value\n    })\n  }\n  \n  update_dataframe(){\n    //First get time_stamps\n    const timestamp = Date.now();\n    const instance_date = Intl.DateTimeFormat(\n      'en-US', {\n        year: 'numeric', month: '2-digit',day: '2-digit'\n      }).format(timestamp);\n    const instance_time = Intl.DateTimeFormat(\n      'en-US', {\n        hour: '2-digit', minute: '2-digit'\n      }).format(timestamp);\n\n\n\n    const updated_count=this.state.count + 1;\n    const new_data_point={\n      id: updated_count,\n      description_val: this.state.description_input,\n      price_val: parseFloat(this.state.price_input),\n      input_date: instance_date,\n      input_time: instance_time\n    };\n\n    const new_data_array = [...this.state.data_array];\n    new_data_array.push(new_data_point);\n    this.setState({\n      description_input: \"\",\n      price_input: \"\",\n      count: updated_count,\n      data_array: new_data_array\n    })\n  }\n  \n  delete_row(id){\n    const full_array = [...this.state.data_array];\n    const updated_array = full_array.filter(item => item.id !== id);\n    this.setState({\n      data_array: updated_array\n    })\n  }\n\n  \n  //JSX and HTML\n  render() {\n    return (\n      <div className=\"App\">\n\n        <div id='Header and inputs'>\n          <header className='App-header'>\n            <h1 className='App-title'>\n              Lew's Big Bad Balance Tracker\n            </h1>\n          </header>\n          <br/>\n          <div id='inputs'>\n            Input:&nbsp;&nbsp;&nbsp;&nbsp;\n            <input\n              type=\"text\"\n              placeholder=\"Description\"\n              value={this.state.description_input}\n              onChange={e => this.update_attribute(\"description_input\", e.target.value)}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Amount\"\n              value={this.state.price_input}\n              onChange={e => this.update_attribute(\"price_input\", e.target.value)}\n            />\n            <button onClick={() => this.update_dataframe()}>\n              Add Transaction\n            </button>\n            <br/>\n            <hr size=\"3\" width=\"100%\" color=\"black\"></hr>  \n          </div>\n        </div>\n        \n        <div id='Summary Stats' class=\"table-container\" role=\"table\" aria-label=\"Destinations\">\n          <div class=\"flex-table header\" role=\"rowgroup\">\n            <div class=\"flex-row\" role=\"columnheader\">Number of Charges</div>\n            <div class=\"flex-row\" role=\"columnheader\">Total Balance</div>\n          </div>\n          <div class=\"flex-table row\" role=\"rowgroup\">\n            <div class=\"flex-row\" role=\"columnheader\">{this.state.data_array.length}</div>\n            <div class=\"flex-row\" role=\"columnheader\">\n              {\n                this.state.data_array.reduce((a,v) =>  a = a + v.price_val , 0 ).toLocaleString(\n                  'en-US',\n                  {\n                    style: 'currency',\n                    currency: 'USD'\n                  }\n                )\n              }\n            </div>\n          </div>\n        </div>\n\n        <div id='Ledger' class=\"table-container\" role=\"table\" aria-label=\"Destinations\">\n          <div class=\"flex-table header\" role=\"rowgroup\">\n            <div class=\"flex-row\" role=\"columnheader\">Date</div>\n            <div class=\"flex-row\" role=\"columnheader\">Time Stamp</div>\n            <div class=\"flex-row\" role=\"columnheader\">Description</div>\n            <div class=\"flex-row\" role=\"columnheader\">Amount</div>\n            <div class=\"flex-row\" role=\"columnheader\">Delete</div>\n          </div>\n          <div>{this.state.data_array.map(\n            item => {\n              return(\n                <div class=\"flex-table row\" role=\"rowgroup\">\n                  <div class=\"flex-row\" role=\"cell\">{item.input_date}</div>\n                  <div class=\"flex-row\" role=\"cell\">{item.input_time}</div>\n                  <div class=\"flex-row\" role=\"cell\">{item.description_val}</div>\n                  <div class=\"flex-row\" role=\"cell\">{\n                    item.price_val.toLocaleString(\n                      'en-US',\n                      {style: 'currency',currency: 'USD'}\n                      )\n                    }</div>\n                  <div class=\"flex-row\" role=\"columnheader\">\n                    <button\n                      onClick={() => this.delete_row(item.id)}\n                    >\n                      Delete\n                    </button></div>\n                </div>\n            )})}\n          </div>\n        </div>       \n\n      </div>\n    )\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}